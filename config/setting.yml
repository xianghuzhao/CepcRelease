bsm:
  require: {'>=': '0.3', '<': '0.4'}

#extra_config: [arch, os, compiler, platform, work_root]

category:
  priority: [work, cepcsoft, external, standby]
  categories:
    not_used: {}
    system:
      pre_check: true
    external:
      install: true
      auto_env: true
      root: '{software_root}/PLATFORM/external'
    cepcsoft:
      install: true
      auto_env: true
      root: '{software_root}/PLATFORM/cepcsoft/{version}'
    work:
      auto_package: true
      auto_env: true
      root: 'WORK_ROOT'
    standby:
      auto_package: true
      auto_env: false
      root: '{software_root}/PLATFORM/standby'

install:
  steps:
    - download
    - extract
    - patch
    - pre_build
    - configure
    - compile
    - install
    - post_build
    - set_env
    - clean
    - save_release_status
  atomic_start: pre_build
  atomic_end: set_env
  no_skip: set_env

global_env:
  CEPCSOFT: '{software_root}/PLATFORM/cepcsoft/{version}'
  CEPCSOFT_EXTERNAL: '{software_root}/PLATFORM/external'
  CEPCSOFT_VERSION: '{version}'
  CEPCSOFT_PLATFORM: PLATFORM

path_def:
  install:
    home: '{package}_root_dir'
    src: '{package}_src_dir'
    bin: '{package}_bin_dir'
    lib: '{package}_lib_dir'
    inc: '{package}_inc_dir'
  path_env:
    bin: PATH
    lib: LD_LIBRARY_PATH
    man: MANPATH
    info: INFOPATH
    pkgconfig: PKG_CONFIG_PATH
    cmake: CMAKE_PREFIX_PATH
    python: PYTHONPATH
    marlin: MARLIN_DLL
  path_overwrite_env:
    marlin: MARLIN_DLL
  solo_env:
    home: '{package}_HOME'
    src: '{package}_SOURCE'
    bin: '{package}_BIN'
    lib: '{package}_LIB'
    inc: '{package}_INCLUDE'

handler:
  auto_compile: auto_cmake

pre_transform: [basic_package, gcc_version, geant4_libdir]
